// GLOBAL ///////////////////////// 

:root {
	--color-background: #fff;
	--color-secondary-background: #f8f8f8;
	--color-clickable: #133d83;
	--color-foreground: #444;
	--color-hover: #c4c4c4;
	--color-disabled: #a6a6a6;
	--color-highlighted: darkorange;
	--color-border: var(--color-hover);
}

body, html {
	padding: 0;
	margin: 0;
	width: 100%;
	height: 100%;
	font-family Arial
}
form
	input:not([type=checkbox]), label, select {
		width: 100%;
	}
input[type=checkbox] + label {
	display: inline;
}
a
	cursor: pointer
	&, &:visited
		color var(--color-clickable)
	&:hover
		color var(--color-hover)
	text-decoration none

a, button
	font-size 13px
fieldset {
	border: 2px solid #eeeeee; // TODO: breaks .box in login, also has border or shadow or both
}
details > summary {
	cursor: pointer;
}
[draggable=true] {
	cursor: move;
}

// CLASSES /////////////////////////

.padding
	padding: 0.5vw
.padding-l
	padding: 1vw
.padding-xl
	padding: 3vw
.margin
	margin: 0.5vw
.margin-l
	margin: 1vw
.margin-xl
	margin: 3vw
.note
	font-size:80%
	opacity:0.8
@keyframes fadein
	from {opacity: 0}
	to {opacity: 1}
// works with v-if etc.
.fade-in
	animation: fadein 0.5s
.fade-toggle
	transition: opacity 0.5s
// does not work with v-if, keeps size, but enables fade out animation. use like: ... class=fade-toggle :class.hidden=_var_
.fade-toggle.hidden
	opacity: 0
.disabled // todo rename inactive or similar & use disabled attribute instead where appropriate
	color: var(--color-disabled)
.highlighted
	color: var(--color-highlighted)
.error, .danger
	color: darkred // css4 @apply fade-in
.small // todo html small instead
	font-size: 80%
.flex-base
	@media not print
		// hack to fix firefox printing https://stackoverflow.com/q/45414152/3779853
		display: flex
	min-height: 0
	min-width: 0
.flex // todo this is kinda stupid
	@extend .flex-base
	@media screen and (max-width: 600px) {
		flex-direction: column
	}
.flex-fill
	flex: 1
.column
	@extend .flex-base
	flex-direction: column
.row
	@extend .flex-base
	flex-direction: row
.justify-center
	@extend .flex-base
	justify-content: center
.align-center
	@extend .flex-base
	align-items: center
.center
	@extend .justify-center, .align-center
.fill-w
	width: 100%
.fill-h
	height: 100%
.fill
	@extend .fill-w, .fill-h
.box
	// box-shadow: 1px 2px 7px 1px #eee
	box-shadow: 1px 1px 1px 1px #ddd
	// border: 1px solid #ddd
	background: rgba(255,255,255,0.88)

.no-click button
	pointer-events none

.force-hidden
	display none !important

.moveable
	cursor move


// The below code is partly adopted from the Sakura CSS style/reset
// This will be redone and limited to what is only actually needed, probably
// eliminating any 3rd party fragments. For the moment, here's the licence:
/* Sakura.css v1.0.0
 * ================
 * Minimal css theme.
 * Project: https://github.com/oxalorg/sakura
		MIT License

		Copyright (c) 2016 Mitesh Shah

		Permission is hereby granted, free of charge, to any person obtaining a copy
		of this software and associated documentation files (the "Software"), to deal
		in the Software without restriction, including without limitation the rights
		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		copies of the Software, and to permit persons to whom the Software is
		furnished to do so, subject to the following conditions:

		The above copyright notice and this permission notice shall be included in all
		copies or substantial portions of the Software.

		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
		SOFTWARE.
 */

// @import 'https://fonts.googleapis.com/css?family=Fira+Mono|Noto+Serif|Noto+Sans:300,400,500';

/* Body */
html {
	font-family: "Noto Serif", "Arial", "Helvetica", sans-serif;
}

body {
	color: var(--color-foreground);
	background-color: var(--color-background);
}

h1, h2, h3, h4, h5, h6 {
	color var(--color-foreground)
	line-height: 1.1;
//	font-family: Verdana, Geneva, sans-serif;
	font-weight: bold;
	overflow-wrap: break-word;
	word-wrap: break-word;
	-ms-word-break: break-all;
	word-break: break-word;
	-ms-hyphens: auto;
	-moz-hyphens: auto;
	-webkit-hyphens: auto;
	hyphens: auto;
//	margin: initial;
}

h2 {
	font-size: 30px;
}

h3 {
	font-size: 20px;
}

blockquote {
	font-style: italic;
	margin-left: 1.5em;
	padding-left: 1em;
	// border-left: 3px solid var(--color-secondary-background); todo
}

img {
	max-width: 100%; }

/* Pre and Code */
pre {
	background-color: #f1f1f1;
	display: block;
	padding: 1em;
	overflow-x: auto; }

code {
	font-size: 0.9em;
	padding: 0 0.5em;
	background-color: #f1f1f1;
	white-space: pre-wrap; }

pre > code {
	padding: 0;
	background-color: transparent;
	white-space: pre; }

textarea {
	width: 100%; }

ul
	list-style-type circle

button // buttons, by default, should not have any specific styling so they can be used better semantically. for typical button-buttons, use .btn
	// also see index ssr html
	-webkit-appearance: none
	color: inherit // FF bug

button, input[type="submit"], input[type="reset"], input[type="button"], label
	cursor: pointer

.button[disabled], button[disabled], input[type="submit"][disabled], input[type="reset"][disabled], input[type="button"][disabled] {
	cursor default
	color: var(--color-disabled)
}
// TODO: .btn = button-like styling, should not be used as button identifier
.btn, input[type="submit"], input[type="reset"], input[type="button"]
	display: inline-block
	// padding: 6px 13px
	padding: 0.5em 1.3em;
	text-align: center
	text-decoration: none
	// white-space: nowrap
	background-color #f0f0f0
	background-image: linear-gradient(rgba(255, 255, 255, 0.45) 50%, transparent 52%);
	box-sizing: border-box
	font-weight bolder
	transition all 0.1s linear
	position: relative
	border-radius 0
	&:hover
		color var(--color-clickable)

	border-style solid
	border-width 0 1px 2px 0
	border-color transparent #e8e8e8 #e0e0e0 transparent
	background-clip padding-box
	/* top + left border, only subtle and thin */ \
	box-shadow -1px -1px 0 0 #f3f3f3
	&:active
		opacity: 0.7
		background unset
		border-width 2px 0 0 1px

textarea, select, input {
	color: #4a4a4a;
	padding: 6px 10px;
	/* The 6px vertically centers text on FF, ignored by Webkit */
	background-color: #f1f1f1;
	border: none;
	box-shadow: none;
	box-sizing: border-box; }
	textarea:focus, select:focus, input[type]:focus {
		border: 1px solid var(--color-border);
		outline: 0; }

input[type="checkbox"]:focus {
	outline: 1px dotted var(--color-border); }

legend, label {
	display: inline-block;
}
legend {
	font-weight: 600; }

progress
	border none /* FF */
	-webkit-appearance none /* chrome */
	appearance none // idk
	&::-webkit-progress-value /* chrome */
		background var(--color-secondary-background)
	&::-moz-progress-bar /* FF */ // for some reason, this cant be on the same line as above. no idea why, might be a bug.
		background var(--color-secondary-background)
	&::-webkit-progress-bar /* chrome */, & /* FF */
		background var(--color-disabled)

*:focus
	// Overwrite the styling for focussed elements
	// This can be removed once focus-visible works........
	outline none
	&:not([tabindex="-1"])
		background-color #fffdb5
	// ........... .
	&::-moz-focus-inner
		border initial
	// support for this is very patchy, chrome only with flag and firefox not at all
	// there is a polyfill, but it's 4 KB, zipped 1 KB :-(
	&:not(:focus-visible)
		background-color unset